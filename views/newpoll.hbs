<div id="app" class="jumbotron">
  <div style="display: grid; grid-template-rows: auto auto;">
    <input type="text" name="pollName" v-model="pollName" v-validate="'required'" style="margin: auto; font-size: 32px; text-align: center;" placeholder="Poll Title">
    <br>
    <div id="errorbox" style="margin: auto;">
      <div style="display: inline-block; text-align: center" class="alert alert-danger" role="alert">
        <div id="errmsg" style="display: inline"></div>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
    </div>
  </div>
  <hr>
  <table class="table">
      <thead>
          <tr>
              <td><strong>ID</strong></td>
              <td><strong>Candidate</strong></td>
              <td></td>
          </tr>
      </thead>
      <tbody>
          <tr v-for="(row, index) in rows">
              <td>\{{index}}</td>
              <td>
                <input type="text" v-model="row.name" style="width: 350px;">
              </td>
              <td>
                  <button v-on:click="removeElement(index); return false;" style="cursor: pointer" class="btn btn-primary">Remove</button>
              </td>
          </tr>
          <tr>
            <td></td>
            <td><button class="btn btn-primary" @click="addRow">Add row</button></td>
            <td></td>
          </tr>
      </tbody>
  </table>
  <hr>
  <div>
    <input type="text" name="adminEmail" v-model="adminEmail" v-validate="'required|email'" placeholder="Admin Email">
    <br>
    <button class="btn btn-primary" @click="submit" :disabled="errors.any()">Create Poll</button>
  </div>
</div>

<script type="text/javascript">
  $("#errorbox").hide()
  Vue.use(VeeValidate);
  var app = new Vue({
      el: "#app",
      data: {
        pollName: "",
        rows: [{}],
        adminEmail: ""
      },
      methods: {
          addRow: function() {
              var elem = document.createElement('tr');
              this.rows.push({
                  name: "",
              });
          },
          removeElement: function(index) {
              this.rows.splice(index, 1);
          },
          setFilename: function(event, row) {
              var file = event.target.files[0];
              row.file = file
          },
          showError(errMsg){
            $("#errorbox #errmsg").html(errMsg)
            $("#errorbox").show()
          },
          submitCheck: function(newPollRequest){
            if(newPollRequest.Name == ""){
              this.showError("Please name the poll.")
              return false
            }
            if(newPollRequest.Options.length < 1){
              //One
              this.showError("Please enroll a candidate in the poll.")
              return false
            }
            $("#errorbox").hide()
            return true
          },
          submit: function(){
            var newPollRequest = {
              "ID": 0,
              "Name": this.pollName,
              "Options": this.rows.map(function(x){return x.name}).filter(function(x){return x != ""}),
              "adminEmail": this.adminEmail
            }
            console.log(newPollRequest)
            if(this.submitCheck(newPollRequest)){
              $.ajax({
                type: "POST",
                url: "api/registerpoll",
                data: JSON.stringify(newPollRequest),
                contentType: "application/json",
                success: function(data){
                    window.location = data
                }
              });
            }
          }
      }
  });
</script>
